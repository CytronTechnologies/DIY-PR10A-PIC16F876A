

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Tue Jul 14 11:56:04 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000D                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0013                     	;# 
    30  0014                     	;# 
    31  0015                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0017                     	;# 
    35  0018                     	;# 
    36  0019                     	;# 
    37  001A                     	;# 
    38  001B                     	;# 
    39  001B                     	;# 
    40  001C                     	;# 
    41  001D                     	;# 
    42  001E                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  0087                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  0091                     	;# 
    52  0092                     	;# 
    53  0093                     	;# 
    54  0094                     	;# 
    55  0098                     	;# 
    56  0099                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009E                     	;# 
    60  009F                     	;# 
    61  010C                     	;# 
    62  010D                     	;# 
    63  010E                     	;# 
    64  010F                     	;# 
    65  018C                     	;# 
    66  018D                     	;# 
    67                           
    68                           	psect	idataCOMMON
    69  078E                     __pidataCOMMON:	
    70                           
    71                           ;initializer for _temp
    72  078E  3432               	retlw	50
    73  0017                     _CCP1CON	set	23
    74  0015                     _CCPR1L	set	21
    75  0012                     _T2CON	set	18
    76  0029                     _RA1	set	41
    77  002A                     _RA2	set	42
    78  002B                     _RA3	set	43
    79  002C                     _RA4	set	44
    80  0032                     _RB2	set	50
    81  009F                     _ADCON1	set	159
    82  0092                     _PR2	set	146
    83  0085                     _TRISA	set	133
    84  0086                     _TRISB	set	134
    85  0087                     _TRISC	set	135
    86                           
    87                           ; #config settings
    88  0000                     
    89                           	psect	cinit
    90  07F8                     start_initialization:	
    91  07F8                     __initialization:	
    92                           
    93                           ; Initialize objects allocated to COMMON
    94  07F8  120A  118A  278E   	fcall	__pidataCOMMON	;fetch initializer
    95  07FB  00F9               	movwf	__pdataCOMMON& (0+127)
    96  07FC                     end_of_initialization:	
    97                           ;End of C runtime variable initialization code
    98                           
    99  07FC                     __end_of__initialization:	
   100  07FC  0183               	clrf	3
   101  07FD  120A  118A  2FB2   	ljmp	_main	;jump to C main() function
   102                           
   103                           	psect	dataCOMMON
   104  0079                     __pdataCOMMON:	
   105  0079                     _temp:	
   106  0079                     	ds	1
   107                           
   108                           	psect	cstackCOMMON
   109  0070                     __pcstackCOMMON:	
   110  0070                     ?_delay:	
   111  0070                     ?_main:	
   112                           ; 0 bytes @ 0x0
   113                           
   114  0070                     delay@data:	
   115                           ; 0 bytes @ 0x0
   116                           
   117                           
   118                           ; 4 bytes @ 0x0
   119  0070                     	ds	4
   120  0074                     ??_delay:	
   121                           
   122                           ; 0 bytes @ 0x4
   123  0074                     	ds	4
   124  0078                     ??_main:	
   125                           
   126                           ; 0 bytes @ 0x8
   127  0078                     	ds	1
   128                           
   129                           	psect	maintext
   130  07B2                     __pmaintext:	
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 60 in file "../../Source file/PR10-MD10C.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;		None               void
   143 ;; Registers used:
   144 ;;		wreg, status,2, status,0, pclath, cstack
   145 ;; Tracked objects:
   146 ;;		On entry : 17F/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   150 ;;      Params:         0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0
   152 ;;      Temps:          1       0       0       0       0
   153 ;;      Totals:         1       0       0       0       0
   154 ;;Total ram usage:        1 bytes
   155 ;; Hardware stack levels required when called:    1
   156 ;; This function calls:
   157 ;;		_delay
   158 ;; This function is called by:
   159 ;;		Startup code after reset
   160 ;; This function uses a non-reentrant model
   161 ;;
   162                           
   163                           
   164                           ;psect for function _main
   165  07B2                     _main:	
   166                           
   167                           ;PR10-MD10C.c: 62: ADCON1 = 0x06;
   168                           
   169                           ;incstack = 0
   170                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   171  07B2  3006               	movlw	6
   172  07B3  1683               	bsf	3,5	;RP0=1, select bank1
   173  07B4  1303               	bcf	3,6	;RP1=0, select bank1
   174  07B5  009F               	movwf	31	;volatile
   175                           
   176                           ;PR10-MD10C.c: 64: TRISA = 0b11111111;
   177  07B6  30FF               	movlw	255
   178  07B7  0085               	movwf	5	;volatile
   179                           
   180                           ;PR10-MD10C.c: 65: TRISB = 0b00000000;
   181  07B8  0186               	clrf	6	;volatile
   182                           
   183                           ;PR10-MD10C.c: 66: TRISC = 0b11000000;
   184  07B9  30C0               	movlw	192
   185  07BA  0087               	movwf	7	;volatile
   186                           
   187                           ;PR10-MD10C.c: 68: CCP1CON = 0b00001100;
   188  07BB  300C               	movlw	12
   189  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   190  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   191  07BE  0097               	movwf	23	;volatile
   192                           
   193                           ;PR10-MD10C.c: 71: PR2 = 0xFF;
   194  07BF  30FF               	movlw	255
   195  07C0  1683               	bsf	3,5	;RP0=1, select bank1
   196  07C1  1303               	bcf	3,6	;RP1=0, select bank1
   197  07C2  0092               	movwf	18	;volatile
   198                           
   199                           ;PR10-MD10C.c: 72: T2CON = 0b00000101;
   200  07C3  3005               	movlw	5
   201  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   202  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   203  07C6  0092               	movwf	18	;volatile
   204  07C7                     l534:	
   205                           ;PR10-MD10C.c: 76: RB2 = 0;
   206                           
   207                           ;PR10-MD10C.c: 75: CCPR1L = 0;
   208                           
   209                           
   210                           ;PR10-MD10C.c: 81: {
   211                           ;PR10-MD10C.c: 82: CCPR1L=0;
   212  07C7  0195               	clrf	21	;volatile
   213                           
   214                           ;PR10-MD10C.c: 83: RB2=0;
   215  07C8  1106               	bcf	6,2	;volatile
   216                           
   217                           ;PR10-MD10C.c: 84: }
   218  07C9  2FE8               	goto	l532
   219  07CA                     l37:	
   220                           ;PR10-MD10C.c: 87: {
   221                           ;PR10-MD10C.c: 88: while(RA2==0)continue;
   222                           
   223  07CA  1D05               	btfss	5,2	;volatile
   224  07CB  2FCA               	goto	l37
   225                           
   226                           ;PR10-MD10C.c: 89: CCPR1L=temp;
   227  07CC  0879               	movf	_temp,w
   228  07CD  0095               	movwf	21	;volatile
   229                           
   230                           ;PR10-MD10C.c: 90: RB2=!RB2;
   231  07CE  3004               	movlw	4
   232  07CF  0686               	xorwf	6,f
   233                           
   234                           ;PR10-MD10C.c: 91: }
   235  07D0  2FE8               	goto	l532
   236  07D1                     l542:	
   237                           
   238                           ;PR10-MD10C.c: 94: {
   239                           ;PR10-MD10C.c: 95: if(temp<255)temp+=1;
   240  07D1  0879               	movf	_temp,w
   241  07D2  3AFF               	xorlw	255
   242  07D3  1903               	skipnz
   243  07D4  2FD9               	goto	l546
   244  07D5  3001               	movlw	1
   245  07D6  00F8               	movwf	??_main
   246  07D7  0878               	movf	??_main,w
   247  07D8  07F9               	addwf	_temp,f
   248  07D9                     l546:	
   249                           
   250                           ;PR10-MD10C.c: 96: CCPR1L=temp;
   251  07D9  0879               	movf	_temp,w
   252  07DA  0095               	movwf	21	;volatile
   253                           
   254                           ;PR10-MD10C.c: 97: delay(5000);
   255  07DB  3000               	movlw	0
   256  07DC  00F3               	movwf	?_delay+3
   257  07DD  3000               	movlw	0
   258  07DE  00F2               	movwf	?_delay+2
   259  07DF  3013               	movlw	19
   260  07E0  00F1               	movwf	?_delay+1
   261  07E1  3088               	movlw	136
   262  07E2  00F0               	movwf	?_delay
   263  07E3  120A  118A  278F   	fcall	_delay
      +       120A  118A         
   264  07E8                     l532:	
   265                           ;PR10-MD10C.c: 78: while(1)
   266                           
   267                           ;PR10-MD10C.c: 98: }
   268                           
   269                           
   270                           ;PR10-MD10C.c: 79: {
   271                           ;PR10-MD10C.c: 80: if(RA1==0)
   272  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   273  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   274  07EA  1C85               	btfss	5,1	;volatile
   275  07EB  2FC7               	goto	l534
   276                           
   277                           ;PR10-MD10C.c: 86: else if(RA2==0)
   278  07EC  1D05               	btfss	5,2	;volatile
   279  07ED  2FCA               	goto	l37
   280                           
   281                           ;PR10-MD10C.c: 93: else if(RA3==0)
   282  07EE  1D85               	btfss	5,3	;volatile
   283  07EF  2FD1               	goto	l542
   284                           
   285                           ;PR10-MD10C.c: 100: else if(RA4==0)
   286  07F0  1A05               	btfsc	5,4	;volatile
   287  07F1  2FE8               	goto	l532
   288                           
   289                           ;PR10-MD10C.c: 101: {
   290                           ;PR10-MD10C.c: 102: if(temp>0)temp-=1;
   291  07F2  0879               	movf	_temp,w
   292  07F3  1903               	btfsc	3,2
   293  07F4  2FD9               	goto	l546
   294  07F5  3001               	movlw	1
   295  07F6  02F9               	subwf	_temp,f
   296  07F7  2FD9               	goto	l546
   297  07F8                     __end_of_main:	
   298                           ;PR10-MD10C.c: 104: delay(5000);
   299                           
   300                           ;PR10-MD10C.c: 103: CCPR1L=temp;
   301                           
   302                           
   303                           	psect	text1
   304  078F                     __ptext1:	
   305 ;; *************** function _delay *****************
   306 ;; Defined at:
   307 ;;		line 113 in file "../../Source file/PR10-MD10C.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;  data            4    0[COMMON] unsigned long 
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;		None               void
   314 ;; Registers used:
   315 ;;		wreg
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   321 ;;      Params:         4       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0
   323 ;;      Temps:          4       0       0       0       0
   324 ;;      Totals:         8       0       0       0       0
   325 ;;Total ram usage:        8 bytes
   326 ;; Hardware stack levels used:    1
   327 ;; This function calls:
   328 ;;		Nothing
   329 ;; This function is called by:
   330 ;;		_main
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           
   335                           ;psect for function _delay
   336  078F                     _delay:	
   337                           
   338                           ;PR10-MD10C.c: 114: for( ;data>0;data-=1);
   339                           
   340                           ;incstack = 0
   341                           ; Regs used in _delay: [wreg]
   342  078F  0873               	movf	delay@data+3,w
   343  0790  0472               	iorwf	delay@data+2,w
   344  0791  0471               	iorwf	delay@data+1,w
   345  0792  0470               	iorwf	delay@data,w
   346  0793  1903               	btfsc	3,2
   347  0794  0008               	return
   348  0795  3001               	movlw	1
   349  0796  00F4               	movwf	??_delay
   350  0797  3000               	movlw	0
   351  0798  00F5               	movwf	??_delay+1
   352  0799  3000               	movlw	0
   353  079A  00F6               	movwf	??_delay+2
   354  079B  3000               	movlw	0
   355  079C  00F7               	movwf	??_delay+3
   356  079D  0874               	movf	??_delay,w
   357  079E  02F0               	subwf	delay@data,f
   358  079F  0875               	movf	??_delay+1,w
   359  07A0  1C03               	skipc
   360  07A1  0F75               	incfsz	??_delay+1,w
   361  07A2  2FA4               	goto	u25
   362  07A3  2FA5               	goto	u26
   363  07A4                     u25:	
   364  07A4  02F1               	subwf	delay@data+1,f
   365  07A5                     u26:	
   366  07A5  0876               	movf	??_delay+2,w
   367  07A6  1C03               	skipc
   368  07A7  0F76               	incfsz	??_delay+2,w
   369  07A8  2FAA               	goto	u27
   370  07A9  2FAB               	goto	u28
   371  07AA                     u27:	
   372  07AA  02F2               	subwf	delay@data+2,f
   373  07AB                     u28:	
   374  07AB  0877               	movf	??_delay+3,w
   375  07AC  1C03               	skipc
   376  07AD  0F77               	incfsz	??_delay+3,w
   377  07AE  2FB0               	goto	u29
   378  07AF  2F8F               	goto	_delay
   379  07B0                     u29:	
   380  07B0  02F3               	subwf	delay@data+3,f
   381  07B1  2F8F               	goto	_delay
   382  07B2                     __end_of_delay:	
   383  007E                     btemp	set	126	;btemp
   384  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              8 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                8     4      4      30
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       1       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Tue Jul 14 11:56:04 2015

            __CFG_CP$OFF 0000                       l37 07CA                       u25 07A4  
                     u26 07A5                       u27 07AA                       u28 07AB  
                     u29 07B0                      l532 07E8                      l542 07D1  
                    l534 07C7                      l546 07D9                      _RA1 0029  
                    _RA2 002A                      _RA3 002B                      _RB2 0032  
                    _RA4 002C                      _PR2 0092             __CFG_CPD$OFF 0000  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
                   _main 07B2                     _temp 0079                     btemp 007E  
                   start 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _T2CON 0012           __CFG_DEBUG$OFF 0000                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087            __CFG_PWRTE$ON 0000  
                  _delay 078F           __CFG_BOREN$OFF 0000                    status 0003  
                  wtemp0 007E          __initialization 07F8             __end_of_main 07F8  
                 ??_main 0078                   ?_delay 0070                   _ADCON1 009F  
                 _CCPR1L 0015             __pdataCOMMON 0079  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_delay 07B2                  ??_delay 0074  
             __pmaintext 07B2                  _CCP1CON 0017                  __ptext1 078F  
   end_of_initialization 07FC            __pidataCOMMON 078E      start_initialization 07F8  
         __size_of_delay 0023                delay@data 0070            __size_of_main 0046  
